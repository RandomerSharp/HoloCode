command = TrainConvNet
makeMode = false ; traceLevel = 0; deviceId = "auto"
rootDir = "."; dataDir = "$rootDir$"; modelDir = "$rootDir$/Models"
modelPath = "$modelDir$/test.cmf"
TrainConvNet = {
	action = "train"
	BrainScriptNetworkBuilder = {
labelDim55604 = 10
imageShap55462 = 32:32:32
model(features) = {
z = LinearLayer { gaussian, init="gaussian", initValueScale = 12  }(d56694)
d56694 = DenseLayer { gaussian, activation=ReLU, init="gaussian", initValueScale = 12  }(p56510)
l56510 = ConvolutionalLayer { 32, (5:5), pad=True, activation=ReLU,init = "gaussian", initValueScale = 0.0043 }(featNorm)
p56510 = MaxPoolingLayer { (3:3), stride = (2:2) }(l56510)
}.z
	features = Input { imageShap55462  }
	labels = Input { labelDim55604  }
	z = model (features)
ce = CrossEntropyWithSoftmax(labels, z)
errs = ErrorPrediction(labels, z)
	featuresNodes = (features)
	labelNodes = (labels)
	criterionNodes = (ce)
	evaluationNodes = (errs)
	outputNodes = (z)
}
